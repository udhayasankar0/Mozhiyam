
import React, { useState } from 'react';
import Navbar from '@/components/layout/Navbar';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Input } from '@/components/ui/input';
import { Book, BookOpen, Upload, Heart, MessageCircle, Plus, ThumbsUp } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import LibraryPostCard from '@/components/library/LibraryPostCard';
import CreatePostDialog from '@/components/library/CreatePostDialog';

// Mock data for library posts
const INITIAL_POSTS = [
  {
    id: '1',
    title: 'роиро┐ро▓ро╛ ро╡ро┐ро┤ро┐ тЬиЁЯМЩ',
    content: `роиро┐ро┤ро▓рпН рокрпЛро▓рпЗ роирпА ро╡роирпНродро╛ропрпН,
роиро┐ройрпИро╡ро╛роХро┐ рокрпЛройро╛ропрпН!
роиро┐ро▓ро╛ роТро│ро┐ропро┐ро▓рпН роХройро╛роХрпНроХро│ро╛ропрпН,
роирпЖроЮрпНроЪроорпЗ роиро┐ро▒рпИроирпНродро╛ропрпН!

роХро╛ро▒рпНро▒рпБ рокрпЗроЪрпБроорпН роХро╛родро▓ро╛ропрпН,
роХрогрпНрогро┐ро▓рпН родроЩрпНроХро┐ роирпАропрпЗ!
роирпЗро░роорпН роЪрпЖройрпНро▒ро╛ро▓рпБроорпН роОройрпНро▒рпБроорпН,
роирпЖроЮрпНроЪро┐ро▓рпН ро╡ро╛ро┤рпНро╡ро╛ропрпН роирпАропрпЗ! тЭдя╕П`,
    author: 'роХро╡ро┐роЮро░рпН роЕроорпБродройрпН',
    type: 'poem' as const,
    likes: 24,
    comments: [
      { id: 'c1', author: 'ро░ро╛роЬройрпН', content: 'роЕро░рпБроорпИропро╛рой роХро╡ро┐родрпИ! рооро┐роХро╡рпБроорпН рокро┐роЯро┐родрпНродро┐ро░рпБроирпНродродрпБ.', timestamp: '2 hours ago' },
      { id: 'c2', author: 'рооро╛ро▓родро┐', content: 'роЙрогро░рпНро╡рпБроХро│рпИ роЕро┤роХро╛роХ ро╡рпЖро│ро┐рокрпНрокроЯрпБродрпНродро┐ропрпБро│рпНро│рпАро░рпНроХро│рпН.', timestamp: '1 day ago' }
    ],
    timestamp: '3 days ago'
  },
  {
    id: '2',
    title: 'роХро╛ро▒рпНро▒рпБроорпН роХройро╡рпБроорпН тЬиЁЯМ┐',
    content: `роЪро┐ро▒ро┐роп роХро┐ро░ро╛роородрпНродро┐ро▓рпН ро╡роЪро┐родрпНрод роЕро░рпБрогрпН, ро╡ро╛ройродрпНродрпИ роирпЗроЪро┐роХрпНроХро┐ро▒ро╛ройрпН. роЕро╡ройрпБроХрпНроХрпБ роЪро┐ро▒рпБро╡ропродро┐ро▓рпН роЗро░рпБроирпНродрпБ ро╡ро┐рогрпНро╡рпЖро│ро┐ропрпИ роЖро░ро╛ропрпНро╡родрпЖройрпНро▒рпЗ роЖроЪрпИ. роЖройро╛ро▓рпН роХро┐ро░ро╛роородрпНродро┐ро▓рпН рокрпЖро░ро┐роп ро╡ро╛ропрпНрокрпНрокрпБроХро│рпН роЗро▓рпНро▓рпИ.

роТро░рпБ роиро╛ро│рпН, роТро░рпБ рокрпЛроЯрпНроЯро┐ропро┐ро▓рпН роХро▓роирпНродрпБ роХрпКрогрпНроЯрпБ, роЕро╡ройрпН роОро┤рпБродро┐роп роХроЯрпНроЯрпБро░рпИ роорпБродро▓рпН рокро░ро┐роЪрпБ рокрпЖро▒рпНро▒родрпБ. роЕродрпБ роЕро╡ройрпИ роироХро░родрпНродро┐ро▒рпНроХрпБроХрпН роХрпВроЯрпНроЯро┐ роЪрпЖройрпНро▒родрпБ. роЕроЩрпНроХрпБ роЕро╡ройрпН роТро░рпБ рокрпЖро░ро┐роп ро╡ро┐роЮрпНроЮро╛ройро┐ропрпИ роЪроирпНродро┐роХрпНроХро┐ро▒ро╛ройрпН. роЕроирпНрод ро╡ро┐роЮрпНроЮро╛ройро┐ роХрпВро▒рпБроХро┐ро▒ро╛ро░рпН:

"ро╡ро╛ропрпНрокрпНрокрпБроХро│рпН роирпАрогрпНроЯродрпВро░роорпН рокропрогроорпН роЪрпЖропрпНропродрпНродро╛ройрпН роЪрпЖропрпНродро╛ро▓рпБроорпН, роХройро╡рпБ рокро▒роХрпНроХродрпН родрпКроЯроЩрпНроХрпБро╡родро▒рпНроХрпБ роТро░рпБ роЪро┐ро▒ро┐роп роХро╛ро▒рпНро▒рпЗ рокрпЛродрпБроорпН!"

роЕроирпНрод ро╡ро╛ро░рпНродрпНродрпИроХро│рпН роЕро░рпБрогрпБроХрпНроХрпБ роТро░рпБ рокрпБродро┐роп роироорпНрокро┐роХрпНроХрпИропрпИроХрпН роХрпКроЯрпБродрпНродродрпБ. роЪро┐ро▓ роЖрогрпНроЯрпБроХро│рпБроХрпНроХрпБрокрпН рокро┐ро▒роХрпБ, роЕро╡ройрпН роЗроирпНродро┐ропро╛ро╡ро┐ройрпН роорпБроХрпНроХро┐роп ро╡ро┐рогрпНро╡рпЖро│ро┐ роЖро░ро╛ропрпНроЪрпНроЪро┐ропро╛ро│ро░ро╛роХ рооро╛ро▒ро┐ройро╛ройрпН. роХро┐ро░ро╛роородрпНродро┐ро▓ро┐ро░рпБроирпНрод роЪро┐ро▒ро┐роп роХройро╡рпБ, ро╡ро┐рогрпНро╡рпЖро│ро┐роХрпНроХрпБрокрпН рокро▒роирпНродродрпБ! ЁЯЪАтЬи

роорпКро┤ро┐:
роироорпН роХройро╡рпБроХро│рпН роОродрпБро╡ро╛роХ роЗро░рпБроирпНродро╛ро▓рпБроорпН, роироорпНрокро┐роХрпНроХрпИропрпБроЯройрпН роорпБропройрпНро▒ро╛ро▓рпН роЕродрпБ роиро┐роЪрпНроЪропрооро╛роХ роиро┐ро▒рпИро╡рпЗро▒рпБроорпН! ЁЯШК`,
    author: 'роЪрпЖро▓рпНро╡ро╛',
    type: 'story' as const,
    likes: 45,
    comments: [
      { id: 'c3', author: 'ро░роорпЗро╖рпН', content: 'роЪро┐ро▒рпБроХродрпИ роорпВро▓роорпН роТро░рпБ роЕро┤роХро╛рой роЪрпЖропрпНродро┐ропрпИроЪрпН роЪрпКро▓рпНро▓ро┐ропрпБро│рпНро│рпАро░рпНроХро│рпН.', timestamp: '1 hour ago' }
    ],
    timestamp: '2 days ago'
  }
];

// Define the post interface
interface Post {
  id: string;
  title: string;
  content: string;
  author: string;
  type: 'poem' | 'story';
  likes: number;
  comments: {
    id: string;
    author: string;
    content: string;
    timestamp: string;
  }[];
  timestamp: string;
}

const LibraryPage = () => {
  const [posts, setPosts] = useState<Post[]>(INITIAL_POSTS);
  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);
  const { toast } = useToast();

  const handlePostSubmit = (newPost: { title: string; content: string; type: 'poem' | 'story' }) => {
    const postWithDetails: Post = {
      ...newPost,
      id: `post-${Date.now()}`,
      author: 'роЙроЩрпНроХро│рпН рокрпЖропро░рпН',
      likes: 0,
      comments: [],
      timestamp: 'Just now'
    };
    
    setPosts([postWithDetails, ...posts]);
    setIsCreateDialogOpen(false);
    
    toast({
      title: "рокродро┐ро╡рпБ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ",
      description: "роЙроЩрпНроХро│рпН рокроЯрпИрокрпНрокрпБ роирпВро▓роХродрпНродро┐ро▓рпН роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ.",
    });
  };

  const handleLike = (postId) => {
    setPosts(posts.map(post => 
      post.id === postId ? { ...post, likes: post.likes + 1 } : post
    ));
  };

  const handleAddComment = (postId, commentText) => {
    if (!commentText.trim()) return;
    
    setPosts(posts.map(post => {
      if (post.id === postId) {
        const newComment = {
          id: `comment-${Date.now()}`,
          author: 'роЙроЩрпНроХро│рпН рокрпЖропро░рпН',
          content: commentText,
          timestamp: 'Just now'
        };
        return {
          ...post,
          comments: [...post.comments, newComment]
        };
      }
      return post;
    }));

    toast({
      description: "роХро░рпБродрпНродрпБ роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ",
    });
  };

  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      
      <main className="flex-1 py-8 bg-neutral-background">
        <div className="container px-4 md:px-6">
          <div className="flex flex-col md:flex-row justify-between items-center mb-8">
            <div>
              <h1 className="text-3xl font-bold text-tamil-DEFAULT mb-2 flex items-center">
                <BookOpen className="mr-2" size={28} />
                роирпВро▓роХроорпН <span className="ml-2 text-neutral-text-medium font-normal text-lg">(Tamil Library)</span>
              </h1>
              <p className="text-neutral-text-medium">
                родрооро┐ро┤рпН роХро╡ро┐родрпИроХро│рпН, роЪро┐ро▒рпБроХродрпИроХро│рпН рооро▒рпНро▒рпБроорпН рокроЯрпИрокрпНрокрпБроХро│рпИ рокроХро┐ро░рпНроирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН
              </p>
            </div>
            
            <Button 
              onClick={() => setIsCreateDialogOpen(true)}
              className="mt-4 md:mt-0 flex items-center gap-2"
            >
              <Plus size={16} />
              рокрпБродро┐роп рокроЯрпИрокрпНрокрпБ роЪрпЗро░рпНроХрпНроХ
            </Button>
          </div>

          {/* Content */}
          <div className="space-y-6">
            {posts.map(post => (
              <LibraryPostCard
                key={post.id}
                post={post}
                onLike={() => handleLike(post.id)}
                onAddComment={(comment) => handleAddComment(post.id, comment)}
              />
            ))}
          </div>
        </div>
      </main>
      
      <CreatePostDialog 
        isOpen={isCreateDialogOpen} 
        onClose={() => setIsCreateDialogOpen(false)}
        onSubmit={handlePostSubmit}
      />
      
      <footer className="bg-white border-t border-neutral-border py-6">
        <div className="container px-4 md:px-6">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <p className="text-neutral-text-medium text-sm">
              ┬й 2025 Tamil Language Tools. All rights reserved.
            </p>
            <div className="flex gap-4">
              <a href="#" className="text-neutral-text-medium hover:text-tamil-DEFAULT text-sm">
                About
              </a>
              <a href="#" className="text-neutral-text-medium hover:text-tamil-DEFAULT text-sm">
                Privacy
              </a>
              <a href="#" className="text-neutral-text-medium hover:text-tamil-DEFAULT text-sm">
                Contact
              </a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default LibraryPage;
